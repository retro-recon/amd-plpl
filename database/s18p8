"Oct. 2, 1987 This is the simulation database file for the AmPAL18P8
The following keywords and symbols have special meaning:
  BEGIN_DEF = begin simulation definition
  END_DEF   = end simulation definition
  DEFINE = specify valid vector values for the different pin types
  PIN   = specify the pin number and the vector class
  EQ    = equation format showing the pin/minterm connections
  NODE  = product terms
  n     = pin number n
  !xxxx = fuse number xxxx
  @xxxx = product term xxxx
  ^x    = constant x
  :     = check value (if 0 or 1)
  \     = check DEFINE list
  ()    = action/value/state
  y.xxxx = node number y.xxxx
  &name = indirect address name; search and evaluate this name
  + = logical OR
  * = logical AND
  / = complement
  % = XOR
  | = XNOR/EQUIV
"
BEGIN_DEF
2600 20 20 36 "array size, number of pins, physical # of pins, # input"
DEFINE
begin
_zener = 2,3,4,5,6,7,8,9;
_input = 0,1,_zener,X,N,Z,F;
_clock = C,K,P,B,F,_input;
_clk_input = _input,_clock;
_output = H,L,X,N,Z,F;
_io    = _input,_output;
_power = N;
end; "DEFINE"

EQ "a PLA may have more than one equation type"
begin "eq (pt array width,array direction) = ...."
eq1(36,1) = 2*/2*1*/1*3*/3*18*/18*
            4*/4*17*/17*5*/5*16*/16*
            6*/6*15*/15*7*/7*14*/14*
            8*/8*13*/13*9*/9*11*/11*
            19*/19*12*/12;
end;  "EQ"
NODE
begin
"EQTYPE specifies the equation format to use; the number
 specifies the starting fuse address to form the equation"
p19_oe = eqtype(eq1) : 0  ;   "output enable for 19"
p19_0  = eqtype(eq1) : 36 ;
p19_1  = eqtype(eq1) : 72 ;
p19_2  = eqtype(eq1) : 108;
p19_3  = eqtype(eq1) : 144;
p19_4  = eqtype(eq1) : 180;
p19_5  = eqtype(eq1) : 216;
p19_6  = eqtype(eq1) : 252;
p19_7  = eqtype(eq1) : 288;

p18_oe = eqtype(eq1) : 324;  "output enable for 18"
p18_0  = eqtype(eq1) : 360;
p18_1  = eqtype(eq1) : 396;
p18_2  = eqtype(eq1) : 432;
p18_3  = eqtype(eq1) : 468;
p18_4  = eqtype(eq1) : 504;
p18_5  = eqtype(eq1) : 540;
p18_6  = eqtype(eq1) : 576;
p18_7  = eqtype(eq1) : 612;

p17_oe = eqtype(eq1) : 648;  "output enable for 17"
p17_0  = eqtype(eq1) : 684;
p17_1  = eqtype(eq1) : 720;
p17_2  = eqtype(eq1) : 756;
p17_3  = eqtype(eq1) : 792;
p17_4  = eqtype(eq1) : 828;
p17_5  = eqtype(eq1) : 864;
p17_6  = eqtype(eq1) : 900;
p17_7  = eqtype(eq1) : 936;

p16_oe = eqtype(eq1) : 972;  "output enable for 16"
p16_0  = eqtype(eq1) : 1008;
p16_1  = eqtype(eq1) : 1044;
p16_2  = eqtype(eq1) : 1080;
p16_3  = eqtype(eq1) : 1116;
p16_4  = eqtype(eq1) : 1152;
p16_5  = eqtype(eq1) : 1188;
p16_6  = eqtype(eq1) : 1224;
p16_7  = eqtype(eq1) : 1260;

p15_oe = eqtype(eq1) : 1296;  "output enable for 15"
p15_0  = eqtype(eq1) : 1332;
p15_1  = eqtype(eq1) : 1368;
p15_2  = eqtype(eq1) : 1404;
p15_3  = eqtype(eq1) : 1440;
p15_4  = eqtype(eq1) : 1476;
p15_5  = eqtype(eq1) : 1512;
p15_6  = eqtype(eq1) : 1548;
p15_7  = eqtype(eq1) : 1584;

p14_oe = eqtype(eq1) : 1620;  "output enable for 14"
p14_0  = eqtype(eq1) : 1656;
p14_1  = eqtype(eq1) : 1692;
p14_2  = eqtype(eq1) : 1728;
p14_3  = eqtype(eq1) : 1764;
p14_4  = eqtype(eq1) : 1800;
p14_5  = eqtype(eq1) : 1836;
p14_6  = eqtype(eq1) : 1872;
p14_7  = eqtype(eq1) : 1908;

p13_oe = eqtype(eq1) : 1944;  "output enable for 13"
p13_0  = eqtype(eq1) : 1980;
p13_1  = eqtype(eq1) : 2016;
p13_2  = eqtype(eq1) : 2052;
p13_3  = eqtype(eq1) : 2088;
p13_4  = eqtype(eq1) : 2124;
p13_5  = eqtype(eq1) : 2160;
p13_6  = eqtype(eq1) : 2196;
p13_7  = eqtype(eq1) : 2232;

p12_oe = eqtype(eq1) : 2268;  "output enable for 12"
p12_0  = eqtype(eq1) : 2304;
p12_1  = eqtype(eq1) : 2340;
p12_2  = eqtype(eq1) : 2376;
p12_3  = eqtype(eq1) : 2412;
p12_4  = eqtype(eq1) : 2448;
p12_5  = eqtype(eq1) : 2484;
p12_6  = eqtype(eq1) : 2520;
p12_7  = eqtype(eq1) : 2556;

or12 = @p12_0 + @p12_1 + @p12_2 + @p12_3 + @p12_4 + @p12_5 + @p12_6 + @p12_7;
or13 = @p13_0 + @p13_1 + @p13_2 + @p13_3 + @p13_4 + @p13_5 + @p13_6 + @p13_7;
or14 = @p14_0 + @p14_1 + @p14_2 + @p14_3 + @p14_4 + @p14_5 + @p14_6 + @p14_7;
or15 = @p15_0 + @p15_1 + @p15_2 + @p15_3 + @p15_4 + @p15_5 + @p15_6 + @p15_7;
or16 = @p16_0 + @p16_1 + @p16_2 + @p16_3 + @p16_4 + @p16_5 + @p16_6 + @p16_7;
or17 = @p17_0 + @p17_1 + @p17_2 + @p17_3 + @p17_4 + @p17_5 + @p17_6 + @p17_7;
or18 = @p18_0 + @p18_1 + @p18_2 + @p18_3 + @p18_4 + @p18_5 + @p18_6 + @p18_7;
or19 = @p19_0 + @p19_1 + @p19_2 + @p19_3 + @p19_4 + @p19_5 + @p19_6 + @p19_7;
end;

PIN
"
specify the pins and the vector values they can take.
Product terms are evaluated by using the @ symbol:
  mem0_input  = @or14; /* input to output cell is @OR14 */
"
begin
1 =
  begin
  val = \_input;
  end;
2  =
  begin
  val = \_input;
  end;
3  =
  begin
  val = \_input;
  end;
4  =
  begin
  val = \_input;
  end;
5  =
  begin
  val = \_input;
  end;
6  =
  begin
  val = \_input;
  end;
7  =
  begin
  val = \_input;
  end;
8  =
  begin
  val = \_input;
  end;
9  =
  begin
  val = \_input;
  end;
10 =
  begin
  val = \_power;
  end;
11 =
  begin
  val = \_input;
  end;
12 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p12_oe;
  mem0_input  = @or12 > 12 combinatorial <;
  mem_output  = 0;
  out_element = !2599 : 0 > 12 active_low  < (/@or12)
                      : 1 > 12 active_high < (@or12);
  end;
13 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p13_oe;
  mem0_input  = @or13 > 13 combinatorial <;
  mem_output  = 0;
  out_element = !2598 : 0 > 13 active_low  < (/@or13)
                      : 1 > 13 active_high < (@or13);
  end;
14 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p14_oe;
  mem0_input  = @or14 > 14 combinatorial <;
  mem_output  = 0;
  out_element = !2597 : 0 > 14 active_low  < (/@or14)
                      : 1 > 14 active_high < (@or14);
  end;
15 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p15_oe;
  mem0_input  = @or15 > 15 combinatorial <;
  mem_output  = 0;
  out_element = !2596 : 0 > 15 active_low  < (/@or15)
                      : 1 > 15 active_high < (@or15);
  end;
16 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p16_oe;
  mem0_input  = @or16 > 16 combinatorial <;
  mem_output  = 0;
  out_element = !2595 : 0 > 16 active_low  < (/@or16)
                      : 1 > 16 active_high < (@or16);
  end;
17 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p17_oe;
  mem0_input  = @or17 > 17 combinatorial <;
  mem_output  = 0;
  out_element = !2594 : 0 > 17 active_low  < (/@or17)
                      : 1 > 17 active_high < (@or17);
  end;
18 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p18_oe;
  mem0_input  = @or18 > 18 combinatorial <;
  mem_output  = 0;
  out_element = !2593 : 0 > 18 active_low  < (/@or18)
                      : 1 > 18 active_high < (@or18);
  end;
19 =
  begin
  val = \_io;
  FF_type = 0;
  storage_type = 0;
  enable = @p19_oe;
  mem0_input  = @or19 > 19 combinatorial <;
  mem_output  = 0;
  out_element = !2592 : 0 > 19 active_low  < (/@or19)
                      : 1 > 19 active_high < (@or19);
  end;
20 =
  begin
  val = \_power;
  end;
end; "PIN"
END_DEF
